*open-handlers.nvim.txt*       For NVIM v0.10.0      Last change: 2024 July 05

==============================================================================
Table of Contents                       *open-handlers.nvim-table-of-contents*

1. open-handlers.nvim                  |open-handlers.nvim-open-handlers.nvim|
  - Requirements          |open-handlers.nvim-open-handlers.nvim-requirements|
  - Setup                        |open-handlers.nvim-open-handlers.nvim-setup|
  - Usage                        |open-handlers.nvim-open-handlers.nvim-usage|
  - Writing custom handlers|open-handlers.nvim-open-handlers.nvim-writing-custom-handlers|

==============================================================================
1. open-handlers.nvim                  *open-handlers.nvim-open-handlers.nvim*

A very simple plugin that allows multiple custom `vim.ui.open` handlers to
co-exist, allowing you to extend `gx` while retaining the default behaviour.

Demonstration
<https://github.com/mrshmllow/open-handlers.nvim/assets/40532058/37141248-138e-4214-be3f-10e30aab1a82>


REQUIREMENTS              *open-handlers.nvim-open-handlers.nvim-requirements*

- Neovim v0.10 or later (nightly currently)


SETUP                            *open-handlers.nvim-open-handlers.nvim-setup*


LAZY.NVIM ~

>lua
    {
      "mrshmllow/open-handlers.nvim",
      -- We modify builtin functions, so be careful lazy loading
      lazy = false,
      cond = vim.ui.open ~= nil,
      config = function()
        local oh = require("open-handlers")
    
        oh.setup({
          -- In order, each handler is tried.
          -- The first handler to successfully open will be used.
          handlers = {
            oh.issue, -- A builtin which handles github and gitlab issues
            oh.commit, -- A builtin which handles git commits
            oh.native -- Default native handler. Should always be last
          },
        })
      end,
    },
<


USAGE                            *open-handlers.nvim-open-handlers.nvim-usage*


OH.ISSUE ~

Opens Github and Gitlab issues in your browser, based on current :pwd git
origin.

1. Example:

`vim.ui.open("#10")` will open issue number 10 in your browser.




OH.COMMIT ~

Opens commits in your browser, based on current :pwd git origin.

1. Example

`vim.ui.open("596745da31fcefc180d2c331805f303b558e7e82")` will open commit
596745 in your browser.

`vim.ui.open("596745")` will open git commit 596745 in your browser.




OH.NATIVE ~

Equivalent to `vim.ui.open` before it is overwritten.


WRITING CUSTOM HANDLERS*open-handlers.nvim-open-handlers.nvim-writing-custom-handlers*

Any custom handlers should copy `vim.ui.open`'s function signature. If it
returns `nil, nil` it will be ignored. See source for examples.

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
